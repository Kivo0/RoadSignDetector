Import numpy as py
import cv2

IMAGE_SIZE = 200.0
MATCH_THRESHOLD = 3

cap = cv2.VideoCapture(0)

cv2.namedWindow("Video")

convert_rgb = True

while True:

    status, img = cap.read()

    roundabout_cascade =    cv2.CascadeClassifier('/home/pi/Desktop/haarcascade_roundabout.xml') 
    gray = cv2.cvtColor(img,cv2.COLOR_RGB2GRAY)
    roundabouts = roundabout_cascade.detectMultiScale(
        gray, 
        scaleFactor=1.4, 
        minNeighbors=3
        )
 
    orb = cv2.ORB_create()
    bf = cv2.BFMatcher(cv2.NORM_HAMMING,crossCheck=True)
 
    roadsign = cv2.imread('/home/pi/Desktop/roundabout.jpg',0)
    kp_r,des_r = orb.detectAndCompute(roadsign,None)
 
    for (x,y,w,h) in roundabouts:
 
        obj = gray[y:y+h,x:x+w]
        ratio = IMAGE_SIZE / obj.shape[1]
        obj = cv2.resize(obj,(int(IMAGE_SIZE),int(obj.shape[0]*ratio)))
 
        kp_o, des_o = orb.detectAndCompute(obj,None)
        if len(kp_o) == 0 or des_o == None: continue
 
        matches = bf.match(des_r,des_o)
     
        if(len(matches) >= MATCH_THRESHOLD):
             cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)
 
    
       cv2.imshow("Video", img)

       k = 0xFF & cv2.waitKey(1)

       if k == 27:
            break
       elif k == ord("g"):
           convert_rgb = not convert_rgb
           cap.set(cv2.CAP_PROP_CONVERT_RGB, convert_rgb)

